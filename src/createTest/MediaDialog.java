/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MediaDialog.java
 *
 * Created on May 17, 2009, 2:25:00 PM
 */
package createTest;

import helper.DirectoryRestrictedFileSystemView;
import helper.ImageFileView;
import helper.ImagePreview;
import helper.Mp3Player;
import helper.Question;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author prasad
 */
public class MediaDialog extends javax.swing.JDialog
{

    static JFileChooser FCImage;
    static JFileChooser FCAudio;
    private static final long serialVersionUID = 1761376739157511396L;
    Question QUESTION;
    ArrayList<String> IList;
    ArrayList<String> AList;
    DefaultListModel IM, AM;


    static
    {
//        FCImage = new JFileChooser(new DirectoryRestrictedFileSystemView(Question.Dir));
        FCImage = new JFileChooser(new DirectoryRestrictedFileSystemView(Question.Dir));
        FCImage.setCurrentDirectory(Question.Dir);
//        FCImage = new JFileChooser();
        FCImage.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FCImage.removeChoosableFileFilter(FCImage.getFileFilter());
        FCImage.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg",
                "jpeg", "png", "ico", "gif"));
        FCImage.setDialogTitle(
                "Select an Image File to be Included in the Question");

        FCImage.setFileView(new ImageFileView());
        FCImage.setAccessory(new ImagePreview(FCImage));

//        FCAudio = new JFileChooser(new DirectoryRestrictedFileSystemView(Question.Dir));
        FCAudio = new JFileChooser(new DirectoryRestrictedFileSystemView(Question.Dir));
        FCAudio.setCurrentDirectory(Question.Dir);
//        FCAudio = new JFileChooser();
        FCAudio.removeChoosableFileFilter(FCAudio.getFileFilter());
        FCAudio.setFileFilter(new FileNameExtensionFilter("Audio", "mp3", "wav"));
        FCAudio.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FCAudio.setDialogTitle("Select an Audio File for the Question");
    }
    private Mp3Player P;

    /** Creates new form MediaDialog */
    public MediaDialog(javax.swing.JFrame parent)
    {
        super(parent, true);
        initComponents();
    }

    public void setQUESTION(Question QUESTION)
    {
        ImagePanel.removeAll();
        this.QUESTION = QUESTION;

        //For Images
        IM = new DefaultListModel();
        IList = new ArrayList<String>(0);
        for (int i = 0; i < QUESTION.Images.length; i++)
        {
            IList.add(QUESTION.Images[i]);
            IM.addElement(QUESTION.Images[i]);
        }
        INameList.setModel(IM);
        if (IM.isEmpty() == false)
        {
            INameList.setSelectedIndex(0);
        }

        //For Audio
        AM = new DefaultListModel();
        AList = new ArrayList<String>(0);
        for (int i = 0; i < QUESTION.Audio.length; i++)
        {
            AList.add(QUESTION.Audio[i]);
            AM.addElement(QUESTION.Audio[i]);
        }
        ANameList.setModel(AM);
        if (AM.isEmpty() == false)
        {
            ANameList.setSelectedIndex(0);
        }

        if (P != null)
        {
            P.finish();
        }
        if (PlayButton.getText().equals("Pause"))
        {
            PlayButton.setText("Play");
            ANameList.setEnabled(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IPanel = new javax.swing.JScrollPane();
        ImagePanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        INameList = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ANameList = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        PlayButton = new javax.swing.JButton();

        setTitle("Add/Remove Media");
        setModal(true);

        IPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Image", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        IPanel.setName("IPanel"); // NOI18N

        ImagePanel.setName("ImagePanel"); // NOI18N
        ImagePanel.setLayout(new java.awt.GridLayout(1, 0));
        IPanel.setViewportView(ImagePanel);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/jpeg.png"))); // NOI18N
        jButton1.setMnemonic('a');
        jButton1.setText("Add Image");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/remove.png"))); // NOI18N
        jButton2.setMnemonic('r');
        jButton2.setText("Remove Image");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        INameList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Added Images", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        INameList.setName("INameList"); // NOI18N
        INameList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                INameListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(INameList);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/accept.png"))); // NOI18N
        jButton3.setText("Done");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/audacity.png"))); // NOI18N
        jButton4.setText("Add Audio");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        ANameList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Added Audio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        ANameList.setName("ANameList"); // NOI18N
        jScrollPane2.setViewportView(ANameList);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/remove.png"))); // NOI18N
        jButton5.setText("Remove Audio");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        PlayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Icons/mplayer.png"))); // NOI18N
        PlayButton.setText("Play");
        PlayButton.setName("PlayButton"); // NOI18N
        PlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PlayButton)
                            .addComponent(jButton3)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {PlayButton, jButton1, jButton2, jButton3, jButton4, jButton5});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PlayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(IPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {PlayButton, jButton1, jButton2, jButton3, jButton4, jButton5});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (FCImage.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            File file = FCImage.getSelectedFile();
            try
            {
//                if (file.getParent().equals(Question.Dir.getPath()) == false)
//                {
////                    FileCopier copy = new FileCopier();
//                    File file2 = new File(Question.Dir, file.getName());
//                    if (file2.exists())
//                    {
//                        if (JOptionPane.showConfirmDialog(this,
//                                file.getName() + " already exists in " +
//                                Question.Dir +
//                                ".Overwrite?", "File Exists!!!",
//                                JOptionPane.OK_CANCEL_OPTION,
//                                JOptionPane.WARNING_MESSAGE) ==
//                                JOptionPane.CANCEL_OPTION)
//                        {
//                            return;
//                        }
//                    }
//                    copy.copy(new CopyJob(true, Question.Dir.getPath(), file.getPath()));
//                    file = file2;
//                }

                BufferedImage I = ImageIO.read(file);
                ImageIcon ico = new ImageIcon(I);
                ImagePanel.removeAll();
                JLabel lb = new JLabel(ico);
                ImagePanel.add(lb);
                IList.add(file.getName());
                IM.addElement(file.getName());
                INameList.repaint();
                INameList.removeAll();
                INameList.setModel(IM);
                Dimension d = this.getSize();
                pack();
                this.setSize(d);

            } catch (IOException ex)
            {
                Logger.getLogger(MediaDialog.class.getName()).log(Level.SEVERE,
                        null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int idx = INameList.getSelectedIndex();
        if (idx < 0 || idx >= IList.size())
        {
            return;
        }
        IList.remove(idx);
        IM.remove(idx);
        ImagePanel.removeAll();
        Dimension d = this.getSize();
        pack();
        this.setSize(d);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void INameListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_INameListValueChanged
    {//GEN-HEADEREND:event_INameListValueChanged
        // TODO add your handling code here:
        int idx = INameList.getSelectedIndex();
        showImage(idx);

}//GEN-LAST:event_INameListValueChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        // TODO add your handling code here:
        QUESTION.Images = new String[0];
        QUESTION.Images = IList.toArray(QUESTION.Images);

        QUESTION.Audio = new String[0];
        QUESTION.Audio = AList.toArray(QUESTION.Audio);
        if (P != null)
        {
            P.finish();
        }
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (FCAudio.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            File mp3 = FCAudio.getSelectedFile();
//            try
//            {
//                if (mp3.getParent().equals(Question.Dir.getPath()) == false)
//                {
//                    FileCopier copy = new FileCopier();
//                    File file2 = new File(Question.Dir, mp3.getName());
//                    if (file2.exists())
//                    {
//                        if (JOptionPane.showConfirmDialog(this,
//                                mp3.getName() + " already exists in " +
//                                Question.Dir + ".Overwrite?",
//                                "File Exists!!!", JOptionPane.OK_CANCEL_OPTION,
//                                JOptionPane.WARNING_MESSAGE) ==
//                                JOptionPane.CANCEL_OPTION)
//                        {
//                            return;
//                        }
//                    }
//                    copy.copy(new CopyJob(true, Question.Dir.getPath(), mp3.getPath()));
//                    mp3 = file2;
//                }

                AM.addElement(mp3.getName());
                ANameList.setModel(AM);
                AList.add(mp3.getName());
                repaint();
//            }
//            catch (IOException ex)
//            {
//                Logger.getLogger(MediaDialog.class.getName()).log(Level.SEVERE,
//                        null, ex);
//            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton5ActionPerformed
    {//GEN-HEADEREND:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int idx = ANameList.getSelectedIndex();
        if (idx < 0 || idx >= AList.size())
        {
            return;
        }
        AList.remove(idx);
        AM.remove(idx);
        if (P != null)
        {
            P.finish();
        }
        repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void PlayButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PlayButtonActionPerformed
    {//GEN-HEADEREND:event_PlayButtonActionPerformed
        // TODO add your handling code here:
        if (PlayButton.getText().equals("Play"))
        {

            int idx = ANameList.getSelectedIndex();
            if (idx < 0)
            {
                return;
            }
            PlayButton.setText("Pause");
            String name = AList.get(idx);
            File mp3 = new File(Question.Dir, name);
            if (mp3.exists())
            {
                P = new Mp3Player(mp3);
                P.start();
                ANameList.setEnabled(false);
            }
            jButton5.setEnabled(false);
        }
        else if (PlayButton.getText().equals("Pause"))
        {
            PlayButton.setText("Play");
            P.finish();
            ANameList.setEnabled(true);
            jButton5.setEnabled(true);
        }
}//GEN-LAST:event_PlayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            public void run()
            {
                MediaDialog dialog = new MediaDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {

                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ANameList;
    private javax.swing.JList INameList;
    private javax.swing.JScrollPane IPanel;
    private javax.swing.JPanel ImagePanel;
    private javax.swing.JButton PlayButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void showImage(int X)
    {
        try
        {
            if (X < 0 || X >= IList.size())
            {
                return;
            }
            File Img = new File(Question.Dir, IList.get(X));
            BufferedImage I = ImageIO.read(Img);
            ImageIcon ico = new ImageIcon(I);
            ImagePanel.removeAll();
            ImagePanel.add(new JLabel(ico));
            Dimension d = this.getSize();
            pack();
            this.setSize(d);
        } catch (IOException ex)
        {
            Logger.getLogger(MediaDialog.class.getName()).log(Level.SEVERE, null,
                    ex);
        }
    }
}
